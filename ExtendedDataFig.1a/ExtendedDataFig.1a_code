setwd("/home/data/t050204/ZYS")

data <- read.table("tcga_RSEM_gene_fpkm", header = TRUE, sep = "\t")
anno <- read.table("probeMap_gencode.v23.annotation.gene.probemap", header = TRUE, sep = "\t")
anno=anno[,-c(3:6)]
colnames(data)[1] <- "id"
df_anno<-merge(data,anno,by.y="id")
df_anno <- df_anno[!duplicated(df_anno$gene), ]
row.names(df_anno)=df_anno$gene
filtered_df_anno <- df_anno[df_anno$gene %in% c("HGS", "STAM", "STAM2"), ]
dt=filtered_df_anno[,-1]
pheno=read.table("Survival_SupplementalTable_S1_20171025_xena_sp", header = TRUE, sep = "\t")
pheno=pheno[,c(1:3)]
colnames(dt) <- gsub("\\.", "_", colnames(dt))
colnames(pheno) <- gsub("\\.", "_", colnames(pheno))
library(dplyr)
pheno <- pheno %>%
  mutate(sample = gsub("-", "_", sample),
         X_PATIENT = gsub("-", "_", X_PATIENT))
sc <- dt[, colnames(dt) %in% pheno$sample]
# Step 1: Create a named vector from pheno dataframe
type_vector <- setNames(pheno$cancer_type_abbreviation, pheno$sample)
# Step 2: Match dt column names with type_vector names to create the 'type' row
type_row <- type_vector[colnames(dt)]
# Check if there are any names that didn't match and assign them NA or other placeholder
type_row[is.na(type_row)] <- NA  # or another placeholder like "Not Found"
# Step 3: Add the 'type' row to dt
dt <- rbind(type = type_row, dt)
write.table(dt,file="HGS_STAM_STAM2_expression.tsv",sep="\t",quote = F)

dt<-read.table("HGS_STAM_STAM2_expression.tsv",sep="\t",header=T)
# plot --------------------------------------------------------------------
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
df <- as.data.frame(t(dt))
library(dplyr)
df <- df %>%
  mutate(symbol = ifelse(grepl("0[1-9]$", rownames(df)), "tumor",
                         ifelse(grepl("1[0-9]$", rownames(df)), "normal", NA)))
HGS=df[,-c(2:3)]
library(ggplot2)
HGS$Patient_ID <- rownames(HGS)
class(HGS$HGS)
HGS$HGS=as.numeric(HGS$HGS)
library(ggplot2)
library(dplyr)
cancer_types <- c("BLCA", "BRCA", "CESC", "CHOL", "COAD", "ESCA", "HNSC",
                  "KIRC", "KIRP", "LIHC", "LUAD", "LUSC", "PRAD", "READ",
                  "SARC", "STAD", "THCA", "THYM", "UCEC","KICH","PAAD",
                  "PCPG")
filtered_HGS <- HGS %>%
  filter(type %in% cancer_types)
print(filtered_HGS)
class(filtered_HGS$HGS)
p_values <- filtered_HGS %>%
  group_by(type) %>%
  summarise(
    p_value = t.test(HGS[symbol == "normal"], HGS[symbol == "tumor"])$p.value
  ) %>%
  mutate(
    annotation = case_when(
      p_value < 0.001 ~ "***",  
      p_value < 0.01 ~ "**",
      p_value < 0.05 ~ "*",
      TRUE ~ "ns"                # 
    ),
    pos = max(filtered_HGS$HGS) * 1.05  
  )

ggplot(filtered_HGS, aes(x = type, y = HGS, fill = symbol)) +
  geom_rect(xmin = 1.5, xmax = 2.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +  # Light grey with transparency
  geom_rect(xmin = 3.5, xmax = 4.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 5.5, xmax = 6.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 7.5, xmax = 8.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 9.5, xmax = 10.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 11.5, xmax = 12.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 13.5, xmax = 14.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 15.5, xmax = 16.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 17.5, xmax = 18.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 19.5, xmax = 20.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 21.5, xmax = 22.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_boxplot(position = position_dodge(width = 1)) +
  scale_fill_manual(values = c("tumor" = "#D14342", "normal" = "#3493E8")) +
  labs(title = "HGS Gene Expression by Cancer Type",
       x = "Cancer Type",
       y = "HGS Gene Expression",
       fill = "Sample Type") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 16, face = "bold"),
        plot.title = element_text(size = 20, face = "bold"),
        axis.title.x = element_text(size = 16, face = "bold"),
        axis.title.y = element_text(size = 16, face = "bold"),
        legend.title = element_text(size = 16, face = "bold"),
        legend.text = element_text(size = 14),
        legend.key.size = unit(1, "cm"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = "white"), 
        legend.background = element_rect(fill = "white", color = "white")) +
  geom_text(data = p_values, aes(x = type, y = pos, label = annotation), 
            inherit.aes = FALSE,  # 不继承全局aes定义
            position = position_dodge(width = 0.8), 
            color = ifelse(p_values$annotation == "ns", "#000000", 
                           ifelse(p_values$type == "KICH" & p_values$annotation == "***", "#3493E8", "#D14342")),  
            vjust = 0) +
  scale_color_identity()
ggsave(filename = "HGS.pdf" ,width = 16,height = 9)
library(tidyverse)
library(dplyr)
STAM <- df %>%
  dplyr::select(-c(HGS, STAM1)) %>%
  mutate(STAM = as.numeric(STAM))
library(ggplot2)
library(dplyr)
library(dplyr)
cancer_types <- c("BLCA", "BRCA", "CESC", "CHOL", "COAD", "ESCA", "HNSC",
                  "KIRC", "KIRP", "LIHC", "LUAD", "LUSC", "PRAD", "READ",
                  "SARC", "STAD", "THCA", "THYM", "UCEC","KICH","PAAD",
                  "PCPG")

filtered_STAM <- STAM %>%
  filter(type %in% cancer_types)

print(filtered_STAM)
class(filtered_STAM$STAM)
p_values <- filtered_STAM %>%
  group_by(type) %>%
  summarise(
    p_value = t.test(STAM[symbol == "normal"], STAM[symbol == "tumor"])$p.value
  ) %>%
  mutate(
    annotation = case_when(
      p_value < 0.01 ~ "**",  
      p_value < 0.05 ~ "*",
      p_value < 0.001 ~ "***",
      TRUE ~ "ns"                
    ),
    pos = max(filtered_STAM$STAM) * 1.05  
  )

ggplot(filtered_STAM, aes(x = type, y = STAM, fill = symbol)) +
  geom_rect(xmin = 1.5, xmax = 2.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +  # Light grey with transparency
  geom_rect(xmin = 3.5, xmax = 4.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 5.5, xmax = 6.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 7.5, xmax = 8.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 9.5, xmax = 10.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 11.5, xmax = 12.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 13.5, xmax = 14.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 15.5, xmax = 16.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 17.5, xmax = 18.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 19.5, xmax = 20.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 21.5, xmax = 22.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_boxplot(position = position_dodge(width = 1)) +
  scale_fill_manual(values = c("tumor" = "#D14342", "normal" = "#3493E8")) +
  labs(title = "STAM Gene Expression by Cancer Type",
       x = "Cancer Type",
       y = "STAM Gene Expression",
       fill = "Sample Type") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 16, face = "bold"),
        plot.title = element_text(size = 20, face = "bold"),
        axis.title.x = element_text(size = 16, face = "bold"),
        axis.title.y = element_text(size = 16, face = "bold"),
        legend.title = element_text(size = 16, face = "bold"),
        legend.text = element_text(size = 14),
        legend.key.size = unit(1, "cm"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = "white"), 
        legend.background = element_rect(fill = "white", color = "white")) +
  geom_text(data = p_values, aes(x = type, y = pos, label = annotation), 
            inherit.aes = FALSE,  
            position = position_dodge(width = 0.8), 
            color = ifelse(p_values$annotation == "ns", "#000000", 
                           ifelse(p_values$type %in% c("BRCA","KICH","KIRC","KIRP","LUAD","LUSC") & p_values$annotation ==  "**","#3493E8", "#D14342")),  
            vjust = 0) +
  scale_color_identity() 

ggsave(filename = "STAM1.pdf" ,width = 16,height = 9)

library(ggplot2)
library(dplyr)
cancer_types <- c("BLCA", "BRCA", "CESC", "CHOL", "COAD", "ESCA", "HNSC",
                  "KIRC", "KIRP", "LIHC", "LUAD", "LUSC", "PRAD", "READ",
                  "SARC", "STAD", "THCA", "THYM", "UCEC","KICH","PAAD",
                  "PCPG")

filtered_STAM2 <- STAM2 %>%
  filter(type %in% cancer_types)
print(filtered_STAM2)
class(filtered_STAM2$STAM2)
p_values <- filtered_STAM2 %>%
  group_by(type) %>%
  summarise(
    p_value = t.test(STAM2[symbol == "normal"], STAM2[symbol == "tumor"])$p.value
  ) %>%
  mutate(
    annotation = case_when(
      p_value < 0.001 ~ "***",  
      p_value < 0.01 ~ "**",
      p_value < 0.05 ~ "*",
      TRUE ~ "ns"                
    ),
    pos = max(filtered_STAM2$STAM2) * 1.05  
  )

ggplot(filtered_STAM2, aes(x = type, y = STAM2, fill = symbol)) +
  geom_rect(xmin = 1.5, xmax = 2.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +  # Light grey with transparency
  geom_rect(xmin = 3.5, xmax = 4.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 5.5, xmax = 6.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 7.5, xmax = 8.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5) +
  geom_rect(xmin = 9.5, xmax = 10.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 11.5, xmax = 12.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 13.5, xmax = 14.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 15.5, xmax = 16.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 17.5, xmax = 18.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 19.5, xmax = 20.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_rect(xmin = 21.5, xmax = 22.5, ymin = -Inf, ymax = Inf, 
            fill = "#F0F0F0", alpha = 0.5)+
  geom_boxplot(position = position_dodge(width = 1)) +
  scale_fill_manual(values = c("tumor" = "#D14342", "normal" = "#3493E8")) +
  labs(title = "STAM2 Gene Expression by Cancer Type",
       x = "Cancer Type",
       y = "STAM2 Gene Expression",
       fill = "Sample Type") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 16, face = "bold"),
        plot.title = element_text(size = 20, face = "bold"),
        axis.title.x = element_text(size = 16, face = "bold"),
        axis.title.y = element_text(size = 16, face = "bold"),
        legend.title = element_text(size = 16, face = "bold"),
        legend.text = element_text(size = 14),
        legend.key.size = unit(1, "cm"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_rect(fill = "white"), 
        legend.background = element_rect(fill = "white", color = "white")) +
  geom_text(data = p_values, aes(x = type, y = pos, label = annotation), 
            inherit.aes = FALSE,  # 不继承全局aes定义
            position = position_dodge(width = 0.8), 
            color = ifelse(p_values$annotation == "ns", "#000000", 
                           ifelse(p_values$type %in% c("BRCA", "COAD", "KICH", "KIRC", "KIRP", "LUAD", "LUSC", "PRAD", "READ", "THCA", "UCEC") & p_values$annotation %in% c("*", "**", "***"), "#3493E8", "#D14342")),  # 设置颜色
            vjust = 0) +
  scale_color_identity()

ggsave(filename = "STAM2.pdf" ,width = 16,height = 9)
